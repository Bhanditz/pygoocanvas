%%
headers
#define NO_IMPORT_PYGOBJECT
#include "pygobject.h"
#include <goocanvas-1.0/goocanvas.h>
#include <pygtk/pygtk.h>

# include <pycairo/pycairo.h>
extern Pycairo_CAPI_t *Pycairo_CAPI;

static PyObject *
_gslist_to_pylist_objs (GSList *source)
{
    GSList *iter;
    PyObject *dest = PyList_New (0);
    for (iter = source; iter != NULL; iter = iter->next)
    {
        PyObject *item = pygobject_new ((GObject *)iter->data);
        PyList_Append (dest, item);
        Py_DECREF (item);
    }
    return dest;
}

static PyObject *
_gslist_to_pylist_strs (GSList *source)
{
    GSList *iter;
    PyObject *dest = PyList_New (0);
    for (iter = source; iter != NULL; iter = iter->next)
    {
        PyObject *item = PyString_FromString ((char *)iter->data);
        PyList_Append (dest, item);
        Py_DECREF (item);
    }
    return dest;
}

%%
modulename goocanvas

%%
import gobject.GObject as PyGObject_Type
import gtk.Container as PyGtkContainer_Type
import gtk.Adjustment as PyGtkAdjustment_Type

%%
ignore
goo_canvas_ellipse_view_new
goo_canvas_group_view_new
goo_canvas_image_view_new
goo_canvas_path_view_new
goo_canvas_polyline_view_new
goo_canvas_rect_view_new
goo_canvas_text_view_new
goo_canvas_ellipse_new
goo_canvas_image_new
goo_canvas_path_new
goo_canvas_polyline_new
goo_canvas_rect_new
goo_canvas_text_new

%%
ignore-glob	
    *_get_type
    _*

%%
override goo_canvas_item_simple_get_path_bounds kwargs
static PyObject *
_wrap_goo_canvas_item_simple_get_path_bounds(PyGObject *self, PyObject *args, PyObject *kwargs)
{
    static char *kwlist[] = { "cr", "bounds", NULL };
    PyObject *py_bounds;
    PycairoContext *cr;
    GooCanvasBounds *bounds;
    gint bbounds, i;

    if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O!O:GooCanvasItemSimple.get_path_bounds", 
        kwlist, &PycairoContext_Type, &cr, &py_bounds))
        return NULL;
    
    bbounds = PySequence_Length(py_bounds);
    bounds = g_new(GooCanvasBounds, bbounds);
    for (i = 0; i < bbounds; i++) {
        PyObject *item = PySequence_GetItem(py_bounds, i);
        Py_DECREF(item);
        if (!PyArg_ParseTuple(item, "iiii", &bounds[i].x1, &bounds[i].y1, &bounds[i].x2, &bounds[i].y2)) {
            PyErr_Clear();
            PyErr_SetString(PyExc_TypeError,
                            "sequence members must be 4-tuples");
            g_free(bounds);
            return NULL;
        }
    }   

    goo_canvas_item_simple_get_path_bounds(GOO_CANVAS_ITEM_SIMPLE(self->obj), 
                                            cr->ctx, bounds);
    g_free(bounds);
    Py_INCREF(Py_None);
    return Py_None;
}
%%
