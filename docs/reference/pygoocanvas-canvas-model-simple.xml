<?xml version="1.0" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="class-canvas-model-simple">
	<refnamediv>
		<refname>goocanvas.CanvasModelSimple</refname>
		<refpurpose>A simple implementation of the canvas model interface.</refpurpose>
	</refnamediv>

	<refsect1>
		<title>Synopsis</title>
		<classsynopsis language="python">
			<ooclass><classname>goocanvas.CanvasModelSimple</classname></ooclass>
			<ooclass><classname>gobject.GObject</classname></ooclass>
			<constructorsynopsis language="python">
				<methodname><link linkend="constructor-canvas-model-simple">goocanvas.CanvasModelSimple</link></methodname>
				<methodparam></methodparam>
      		</constructorsynopsis>
		</classsynopsis>

	</refsect1>

	<refsect1>
    	<title>Ancestry</title>

<synopsis>+-- <link linkend="class-gobject">gobject.GObject</link>
	+-- <link linkend="class-canvas-model-simple">goocanvas.CanvasModelSimple</link>
</synopsis>
	</refsect1>

	<refsect1>
		<title>Implemented interfaces</title>

		<para>
			<link linkend="class-canvas-model-simple"><classname>goocanvas.CanvasModelSimple</classname></link>
			implements
			<link linkend="class-canvas-model"><classname>goocanvas.CanvasModel</classname></link>
		</para>
	</refsect1>

	<refsect1>
		<title>Description</title>

		<para>
			<link linkend="class-canvas-model-simple"><classname>goocanvas.CanvasModelSimple</classname></link>
			is a simple implementation of the 
			<link linkend="class-canvas-model"><classname>goocanvas.CanvasModel</classname></link>
			interface.Typically the canvas model is created, items are added, 
			and then the model is set in the 
			<link linkend="class-canvas-view"><classname>goocanvas.CanvasView</classname></link>:
		</para>

<programlisting>
# Create the canvas view
canvas = goocanvas.CanvasView()

# create a simple model
canvas_model = goocanvas.CanvasModelSimple()

# Get the root item of the model
root = canvas_model.get_root_item()

# Create a rectangle item
item = goocanvas.Rect(x=100, y=100, width=400, height=400)

# Add the item to the root
root.add_child(item)

# Pass the model to the GooCanvasView
canvas_view(canvas_model)
</programlisting>
	</refsect1>

	<refsect1 id="constructor-canvas-model-simple">
		<title>Constructor</title>
		
		<programlisting><constructorsynopsis language="python">
				<methodname>goocanvas.CanvasModelSimple</methodname>
			</constructorsynopsis></programlisting>
		
		<variablelist>
			<varlistentry>
				<term><emphasis>Returns</emphasis>&nbsp;:</term>
				<listitem><simpara>A new 
					<link linkend="class-canvas-model-simple"><classname>goocanvas.CanvasModelSimple</classname></link>
					</simpara></listitem>
			</varlistentry>
		</variablelist>
		<para>
			Creates a new simple canvas model.
		</para>
	</refsect1>
</refentry>

